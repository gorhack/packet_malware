import networkx as nx
import matplotlib.pyplot as plt
import PcapAnalyzer


def graphPcap(analyzedPcap):
    print("Graphing Pcap...")
    G = nx.Graph()

    _node_info = dict()
    # node_name : [node_color, node_size]
    _edge_info = dict()
    # [node1, node2] : color

    for p in analyzedPcap:
        _ip = p.ip
        _hostname = p.hostname
        _relationships = p.relationships
        _malicious_files = p.malicious_files,
        _warning_level = p.warning_level

        g = nx.star_graph(0)
        g.add_node(_hostname)
        if _warning_level == 0:
            node_color = 'b'
        elif _warning_level == 1:
            node_color = 'y'
        else:
            node_color = 'r'
        _node_info[_hostname] = [node_color, 8000]

        for r in _relationships:
            g.add_node(r.hostname)
            g.add_edge(_hostname, r.hostname)

            if r.warning_level == 0:
                node_color = 'b'
                node_size = 600
            elif r.warning_level == 1:
                node_color = 'y'
                node_size = 1000
            else:
                node_color = 'r'
                node_size = 2000
            _node_info[r.hostname] = [node_color, node_size]
            _edge_info[_hostname, r.hostname] = node_color

        G.add_nodes_from(g.nodes())
        G.add_edges_from(g.edges())

    G.remove_node(0)
    _node_list = []
    _node_colors = []
    _node_sizes = []
    for k, v in _node_info.items():
        _node_list.append(k)
        _node_colors.append(v[0])
        _node_sizes.append(v[1])

    nx.draw(G,
            nodelist=_node_list,
            node_color=_node_colors,
            node_size=_node_sizes,
            edgelist=_edge_info.keys(),
            edge_color=_edge_info.values(),
            with_labels=True)
    plt.show()


def main():
    print("Graphing!")
    G = nx.Graph()
    G.add_nodes_from([1-3])
    G.add_edge(1, 2)

    nx.draw_random(G)
    nx.draw_circular(G)
    nx.draw_spectral(G)
    plt.show()


if __name__ == '__main__':
    main()
