import requests
import api_keys


class GSB(object):
    def __init__(self):
        self.gsb_api_key = api_keys.google_safe_browsing
        self.name = "packet_malware"
        self.version = "1.0"

        # parameters for URL in post request
        self.url = 'https://sb-ssl.google.com/safebrowsing/api/lookup?'
        self.count = 0
        self.response = ''

    def analyzeUrls(self, urls2analyze):
        if len(urls2analyze) == 0:
            raise ValueError("No urls to analyze")
            return self.response

        urls = urls2analyze
        workingCount = urls

        if len(workingCount) > 500:
            workingCount = urls[0:500]
            urls = urls[500:]
        else:
            urls = []

        payload = str(len(workingCount))
        for url in workingCount:
            payload += "\n" + url

        self.post_params = {
            "client": self.name,
            "key": self.gsb_api_key,
            "appver": self.version,
            "pver": "3.1"
        }
        with requests.Session() as s:
            try:
                r = s.post(self.url,
                           params=self.post_params,
                           data=payload,
                           timeout=5)
                if r.status_code == 204:
                    self.response += '\nok'*len(workingCount)
                elif r.status_code == requests.codes.ok:
                    self.response += '\n' + r.text
                else:
                    raise ValueError("Invalid " +
                                     "response code: {}".format(r.status_code))
            except(requests.exceptions.RequestException) as e:
                if self.count > 5:
                        self.count = 0
                        print("Too many connection failures, " +
                              "check your Internet connection: {}".format(e))

                else:
                    print("Error sending URLs to GSB")
                    self.count += 1
                    return self.analyzeUrls(urls2analyze)
        if len(urls) > 0:
            self.analyzeUrls(urls)
        self.response = self.response.lstrip()


if __name__ == '__main__':
    urls = ['http://Fianfette.org',  # ok
            'http://akadns.net',     # ok
            'estudiobarco.com.ar']   # malware
    g = GSB()
    g.analyzeUrls(urls)
    print(g.response.strip())
