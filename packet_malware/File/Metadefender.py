import requests
import json


class Metadefender(object):  # 1500 hashes/hr
    def __init__(self, api_key):
        self.md_api_key = api_key
        self.url = 'https://hashlookup.metadefender.com/v2/hash'
        self.response = json.loads('[]')
        self.count = 0

    def analyzeHashes(self, hashes2analyze):
        if len(hashes2analyze) == 0:
            raise ValueError("No hashes to analyze")
            return self.response

        hashes = hashes2analyze
        workingCount = hashes

        if len(workingCount) > 1000:
            workingCount = hashes[0:1000]
            hashes = hashes[1000:]
        else:
            hashes = []

        headers = {
            'apikey': self.md_api_key,
            'content-type': 'application/json'
        }

        payload = {"hash": workingCount}

        self.post_params = {
            "apikey": self.md_api_key
        }
        with requests.Session() as s:
            try:
                r = s.post(self.url,
                           headers=headers,
                           data=json.dumps(payload),
                           timeout=5)
                if r.status_code == 403:
                    raise ConnectionRefusedError('Reached max API limit, ' +
                                                 'try again later')
                elif r.status_code == requests.codes.ok:
                    self.response += json.loads(r.text)
                    # print(json.dumps(parsed, indent=4))
                    # self.response += r.json()
                    # self.response = parsed_head
                else:
                    raise ValueError("Invalid " +
                                     "response code: {}".format(r.status_code))
            except(requests.exceptions.RequestException) as e:
                if self.count > 5:
                        self.count = 0
                        print("Too many connection failures, " +
                              "check your Internet connection: {}".format(e))

                else:
                    print("Error sending URLs to metadefender")
                    self.count += 1
                    return self.analyzeHashes(hashes2analyze)
        if len(hashes) > 0:
            self.analyzeHashes(hashes)

if __name__ == '__main__':
    hashes = ['72EC63C377B0C42CE85C3C818B91C073',
              'D70453060565886AFE6B057F858644A0',
              '9F756E72EACC6B805481A49CE51C4A79']
    md = Metadefender()
    md.analyzeHashes(hashes)
